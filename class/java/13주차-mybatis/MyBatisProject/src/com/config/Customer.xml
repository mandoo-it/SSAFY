<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 실행할 query문이 들어 있는 파일 
namespace : 사용할 도메인(테이블)을 구분하기 위해서 붙이는 식별자
-->
<mapper namespace="Customer">
<!-- 리절트 맵 정의 -->
<!-- select문을 쓰면 한 건이라도 resultMap을 통해 뒤처리를 해줘야한다. (select후의 결과 처리를 위한 부분
type에서 지정한 vo를 생성한 후 테이블의 컬럼에서 값을 뽑아 vo에 setting을 해준다
vo는 list에 저장되어 리턴됨
 -->
   <resultMap id="CustomerResult"  type="Customer"> <!-- 레코드 갯수만큼 resultMap이 알아서 반복 -->
     <result property="num" column="num"/>
     <result property="name" column="name"/>
     <result property="address" column="address"/>
   </resultMap>

  <select id="selectAll" resultMap="CustomerResult">
    select * from customer order by num
  </select>

  <select id="selectCustomer" parameterType="java.lang.String" resultMap="CustomerResult">
    select * from customer where num = #{num}
  </select>
  
  <insert id="insert" parameterType="Customer">
  	insert into customer values(#{num} , #{name}, #{address})
  </insert>
  
  <delete id="delete" parameterType = "java.lang.String">
  	delete from customer where num = #{num}
  </delete>
  
  <update id="update" parameterType = "Customer">
  	update customer set address = #{address} where num = ${num}
  </update>
  
  <select id="findByAddress" parameterType = "java.lang.String" resultMap="CustomerResult">
  	select * from customer where address =  #{address}
  </select>

</mapper>