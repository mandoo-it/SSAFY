/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-11-19 01:26:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/ssafy/springspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/SpringRest/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1571883936774L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>RESTful 웹서비스 클라이언트(JSON)</title>\r\n");
      out.write("<link\r\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\"\r\n");
      out.write("\trel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(document).ready(function() {\r\n");
      out.write("\t\tcustomerList();//모든 사용자 정보 요청\r\n");
      out.write("\t\tcustomerSelect();//한사람 선택시 처리할 이벤트 등록\r\n");
      out.write("\t\tcustomerDelete();//한사람 삭제시 처리할 이벤트 등록\r\n");
      out.write("\t\tcustomerUpdate();//한 사람 저오 수정시 처리한 이벤트 등록\r\n");
      out.write("\t\tcustomerInsert();//새 고객 정보 추가시 처리할 이벤트 등록\r\n");
      out.write("\t\tinit();\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//모든 사용자 목록 조회 요청\r\n");
      out.write("\tfunction customerList() {//rest 서버에 모든 고객 정보에 대한 ajax 요청 보내기\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : 'customers',\r\n");
      out.write("\t\t\ttype : 'get',\r\n");
      out.write("\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\tsuccess:function(data) {\r\n");
      out.write("\t\t\t\tcustomerListResult(data);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr, status, msg) {\r\n");
      out.write("\t\t\t\talert(\"상태값 : \" + status + \"http 에라 메세지\" + msg);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction customerListResult(data) {//rest 서버에 모든 고객 정보에 대한 ajax 요청 보내기\t\r\n");
      out.write("\t\t$('tbody').empty();\r\n");
      out.write("\t\t$.each(data, function(idx, item) {\r\n");
      out.write("\t\t\t$('<tr>').append($('<td>').html(item.num))\r\n");
      out.write("\t\t\t\t   .append($('<td>').html(item.name))\r\n");
      out.write("\t\t\t\t   .append($('<td>').html(item.address))\r\n");
      out.write("\t\t\t       .append($('<td>').html('<button id=\"btnSelect\">조회</button>'))\r\n");
      out.write("\t\t\t       .append($('<td>').html('<button id=\"btnDelete\">삭제</button>'))\r\n");
      out.write("\t\t\t       .append($('<input type=\"hidden\" id=\"hidden_num\">').val(item.num))\r\n");
      out.write("\t\t\t       .appendTo('tbody')\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t//사용자 조회 요청\r\n");
      out.write("\tfunction customerSelect() {\r\n");
      out.write("\t\t$('body').on('click', '#btnSelect', function() {\r\n");
      out.write("\t\t\tvar num = $(this).closest('tr').find('#hidden_num').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : 'customers/' + num,\r\n");
      out.write("\t\t\t\ttype : 'get',\r\n");
      out.write("\t\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\t\tsuccess : customerSelectResult\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t}//customerSelect\r\n");
      out.write("    \r\n");
      out.write("\tfunction customerSelectResult(data) {\r\n");
      out.write("\t\t$('#num').val(data.num);\r\n");
      out.write("\t\t$('#name').val(data.name);\r\n");
      out.write("\t\t$('#address').val(data.address);\r\n");
      out.write("\t}\r\n");
      out.write("\t//사용자 삭제 요청\r\n");
      out.write("\tfunction customerDelete() {\r\n");
      out.write("\t\t$('body').on('click', '#btnDelete', function(){\r\n");
      out.write("\t\t\tvar num = $(this).closest('tr').find('#hidden_num').val();\r\n");
      out.write("\t\t\tvar result = confirm(num + \"사용자를 정말로 삭제하시겠습니까?\");\r\n");
      out.write("\t\t\tif(result) {\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : 'customers/' + num,\r\n");
      out.write("\t\t\t\t\ttype : 'delete',\r\n");
      out.write("\t\t\t\t\tdataType : 'json',\r\n");
      out.write("\t\t\t\t\tsuccess : customerList\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t}//customerDelete\r\n");
      out.write("\t\r\n");
      out.write("\t//사용자 수정 요청\r\n");
      out.write("\tfunction customerUpdate() {\r\n");
      out.write("\t\t$('#btnUpdate').on('click', function(){\r\n");
      out.write("\t\t\t// 1. 입력값 받아오기\r\n");
      out.write("\t\t\tvar num = $('#num').val();\r\n");
      out.write("\t\t\tvar name = $('#name').val();\r\n");
      out.write("\t\t\tvar address = $('#address').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//2.ajax요청 보내기\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : 'customers',\r\n");
      out.write("\t\t\t\ttype : 'put',\r\n");
      out.write("\t\t\t\tdataType : 'json',//from server\r\n");
      out.write("\t\t\t\tdata : JSON.stringify({ //data to server\r\n");
      out.write("\t\t\t\t\tnum : num,\r\n");
      out.write("\t\t\t\t\tname : name,\r\n");
      out.write("\t\t\t\t\taddress : address\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tcontentType : 'application/json',\r\n");
      out.write("\t\t\t\tsuccess:function() {\r\n");
      out.write("\t\t\t\t\tcustomerList();\r\n");
      out.write("\t\t\t\t\tclear();\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(xhr, status, msg) {\r\n");
      out.write("\t\t\t\t\talert(\"상태값 : \" + status + \"http 에라 메세지\" + msg);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//성공시 화면 refresh\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}//customerUpdate\r\n");
      out.write("\r\n");
      out.write("\t//사용자 등록 요청\r\n");
      out.write("\tfunction customerInsert() {\r\n");
      out.write("\t\t$('#btnInsert').on('click', function(){\r\n");
      out.write("\t\t\t// 1. 입력값 받아오기\r\n");
      out.write("\t\t\tvar num = $('#num').val();\r\n");
      out.write("\t\t\tvar name = $('#name').val();\r\n");
      out.write("\t\t\tvar address = $('#address').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//2.ajax요청 보내기\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : 'customers',\r\n");
      out.write("\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\tdataType : 'json',//from server\r\n");
      out.write("\t\t\t\tdata : JSON.stringify({ //data to server\r\n");
      out.write("\t\t\t\t\tnum : num,\r\n");
      out.write("\t\t\t\t\tname : name,\r\n");
      out.write("\t\t\t\t\taddress : address\r\n");
      out.write("\t\t\t\t}),\r\n");
      out.write("\t\t\t\tcontentType : 'application/json',\r\n");
      out.write("\t\t\t\tsuccess:function() {\r\n");
      out.write("\t\t\t\t\tcustomerList();\r\n");
      out.write("\t\t\t\t\tclear();\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(xhr, status, msg) {\r\n");
      out.write("\t\t\t\t\talert(\"상태값 : \" + status + \"http 에라 메세지\" + msg);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t//성공시 화면 refresh\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}//customerInsert\r\n");
      out.write("\t\r\n");
      out.write("\tfunction clear() {\r\n");
      out.write("\t\t$('#num').val('');\r\n");
      out.write("\t\t$('#name').val('');\r\n");
      out.write("\t\t$('#address').val('');\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t//초기화\r\n");
      out.write("\tfunction init() {\r\n");
      out.write("\t\t//초기화 버튼 클릭\r\n");
      out.write("\t\t$('#btnInit').on('click', function() {\t\r\n");
      out.write("\t\t\t  clear();\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<form id=\"form1\" class=\"form-horizontal\">\r\n");
      out.write("\t\t\t<h2>Customer Management</h2>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>번호:</label> <input type=\"text\" class=\"form-control\"\tid=\"num\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>이름:</label> <input type=\"text\" class=\"form-control\"\tid=\"name\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"form-group\">\r\n");
      out.write("\t\t\t\t<label>주소:</label> <input type=\"text\" class=\"form-control\" id=\"address\">\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<div class=\"btn-group\">\r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"btn btn-primary\" value=\"등록\"\t id=\"btnInsert\" /> \r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"btn btn-primary\" value=\"수정\" id=\"btnUpdate\" /> \r\n");
      out.write("\t\t\t\t<input type=\"button\" class=\"btn btn-primary\" value=\"초기화\" id=\"btnInit\" />\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<hr />\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2>사용자 목록</h2>\r\n");
      out.write("\t\t<table class=\"table text-center\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th class=\"text-center\">번호</th>\r\n");
      out.write("\t\t\t\t\t<th class=\"text-center\">이름</th>\r\n");
      out.write("\t\t\t\t\t<th class=\"text-center\">주소</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody></tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
